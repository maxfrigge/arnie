{"version":3,"sources":["../../src/providers/NodeDebugger.js"],"names":["NodeDebuggerProvider","safeStringify","obj","cache","returnValue","JSON","stringify","key","value","indexOf","push","options","window","chrome","process","versions","electron","Error","padded","text","size","padding","Array","join","registeredFunctionTrees","send","debuggingData","context","functionDetails","payload","id","execution","executionId","prevFunction","functions","functionIndex","isExistingFunction","Boolean","data","concat","outputs","logLevel","staticTree","length","args","console","log","apply","color","method","filter","arg","map","white","bgWhite","black","bold","name","chosenOutput","Object","keys","outputKey","isArray","dim","underline","payloadString","substr","debugger","getColor","colors"],"mappings":"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","file":"NodeDebugger.js","sourcesContent":["import chalk from 'chalk'\n\nfunction safeStringify (obj) {\n  let cache = []\n  const returnValue = JSON.stringify(obj || {}, function (key, value) {\n    if (typeof value === 'object' && value !== null) {\n      if (cache.indexOf(value) === -1) {\n        cache.push(value)\n\n        return value\n      }\n      return '[CIRCULAR]'\n    }\n    return value\n  })\n\n  cache = null\n\n  return returnValue\n}\n\nexport default function NodeDebuggerProvider (options = {}) {\n  if (\n      typeof window !== 'undefined' &&\n      (\n        typeof window.chrome !== 'undefined' ||\n        process && process.versions && process.versions.electron\n      )\n    ) {\n    throw new Error('function-tree: You are running the Node debugger, but the Chrome debugger is supported')\n  }\n\n  function padded (text, size = 0) {\n    const padding = new Array(size + 1).join(' ')\n\n    return padding + text + padding\n  }\n\n  const registeredFunctionTrees = {}\n\n  function send (debuggingData, context, functionDetails, payload) {\n    const id = context.execution.id + '_' + context.execution.executionId\n    const prevFunction = (\n      registeredFunctionTrees[id] &&\n      registeredFunctionTrees[id].functions[functionDetails.functionIndex]\n        ? registeredFunctionTrees[id].functions[functionDetails.functionIndex]\n        : null\n    )\n    const isExistingFunction = Boolean(prevFunction && prevFunction.functionIndex === functionDetails.functionIndex)\n\n    if (registeredFunctionTrees[id] && registeredFunctionTrees[id].functions[functionDetails.functionIndex]) {\n      registeredFunctionTrees[id].functions[functionDetails.functionIndex].data.push(debuggingData)\n    } else if (isExistingFunction) {\n      prevFunction.data = prevFunction.data.concat(debuggingData)\n    } else if (registeredFunctionTrees[id]) {\n      registeredFunctionTrees[id].functions[functionDetails.functionIndex] = {\n        functionIndex: functionDetails.functionIndex,\n        outputs: functionDetails.outputs,\n        payload,\n        data: []\n      }\n    } else {\n      registeredFunctionTrees[id] = {\n        logLevel: 0,\n        staticTree: context.execution.staticTree,\n        functions: {}\n      }\n      registeredFunctionTrees[id].functions[functionDetails.functionIndex] = {\n        functionIndex: functionDetails.functionIndex,\n        outputs: functionDetails.outputs,\n        payload,\n        data: []\n      }\n    }\n\n    if (isExistingFunction) {\n      const data = prevFunction.data[prevFunction.data.length - 1]\n      const args = data ? data.args || [] : []\n\n      console.log.apply(console,\n        [padded(chalk[data.color || 'white'](data.method), registeredFunctionTrees[id].logLevel)].concat(\n          args.filter(function (arg) {\n            return typeof arg !== 'function'\n          }).map(function (arg) {\n            return padded(chalk.white(JSON.stringify(arg)), registeredFunctionTrees[id].logLevel)\n          })\n        )\n      )\n    } else {\n      if (registeredFunctionTrees[id].functions.length === 1) {\n        console.log(chalk.bgWhite.black.bold(padded(context.execution.name || context.execution.id)))\n      }\n\n      if (prevFunction && prevFunction.outputs) {\n        const chosenOutput = Object.keys(prevFunction.outputs).filter(function (outputKey) {\n          if (\n            prevFunction.outputs[outputKey].length &&\n            (\n              ( // Might be an array which is the first element\n                Array.isArray(prevFunction.outputs[outputKey][0]) &&\n                prevFunction.outputs[outputKey][0][0].functionIndex === functionDetails.functionIndex\n              ) ||\n              prevFunction.outputs[outputKey][0].functionIndex === functionDetails.functionIndex\n            )\n          ) {\n            return true\n          }\n\n          return false\n        })[0]\n        console.log(padded(chalk.dim.underline.white(chosenOutput), registeredFunctionTrees[id].logLevel))\n        registeredFunctionTrees[id].logLevel++\n      }\n\n      const payloadString = safeStringify(payload)\n\n      console.log(padded(chalk.underline.white(functionDetails.name), registeredFunctionTrees[id].logLevel))\n      console.log(padded(\n        chalk.dim(payloadString.length > 300 ? payloadString.substr(0, 297) + '...' : payloadString),\n        registeredFunctionTrees[id].logLevel\n      ))\n    }\n  }\n\n  return (context, functionDetails, payload) => {\n    context.debugger = {\n      send (data) {\n        send(data, context, functionDetails, payload)\n      },\n      getColor (key) {\n        return options.colors[key] || 'white'\n      }\n    }\n\n    send(null, context, functionDetails, payload)\n\n    return context\n  }\n}\n"]}