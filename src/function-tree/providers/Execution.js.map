{"version":3,"sources":["../../src/providers/Execution.js"],"names":["ExecutionProvider","execution","Abort","context","retry","payload","Promise","resolve","staticTree","runFunction","abort"],"mappings":";;;;;kBAEwBA,iB;;AAFxB;;;;;;AAEe,SAASA,iBAAT,CAA4BC,SAA5B,EAAuCC,KAAvC,EAA8C;AAC3D,SAAO,UAACC,OAAD,EAAa;AAClBA,YAAQF,SAAR,GAAoBA,SAApB;AACAE,YAAQF,SAAR,CAAkBG,KAAlB,GAA0B,UAACC,OAAD,EAAa;AACrC,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B,mCAAYN,UAAUO,UAAtB,EAAkCP,UAAUQ,WAA5C,EAAyDJ,OAAzD,EAAkEE,OAAlE;AACD,OAFM,CAAP;AAGD,KAJD;AAKAJ,YAAQF,SAAR,CAAkBS,KAAlB,GAA0B,YAAM;AAC9B,aAAO,IAAIR,KAAJ,EAAP;AACD,KAFD;;AAIA,WAAOC,OAAP;AACD,GAZD;AAaD","file":"Execution.js","sourcesContent":["import executeTree from '../executeTree'\n\nexport default function ExecutionProvider (execution, Abort) {\n  return (context) => {\n    context.execution = execution\n    context.execution.retry = (payload) => {\n      return new Promise((resolve) => {\n        executeTree(execution.staticTree, execution.runFunction, payload, resolve)\n      })\n    }\n    context.execution.abort = () => {\n      return new Abort()\n    }\n\n    return context\n  }\n}\n"]}